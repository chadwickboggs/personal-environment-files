# ~/.bash_profile: executed by bash for login shells.

# source the system wide bashrc if it exists
if [ -e "/etc/bash.bashrc" ] ; then
  source "/etc/bash.bashrc"
fi

# source the users bashrc if it exists
if [ -e "${HOME}/.bashrc" ] ; then
  source "${HOME}/.bashrc"
fi

# Set PATH so it includes user's private bin if it exists
if [ -d "${HOME}/bin" ] ; then
  export PATH="${HOME}/bin:${PATH}"
fi

# Set PATH so it includes user's private bin.comcast if it exists
if [ -d "${HOME}/bin.comcast" ] ; then
  export PATH="${HOME}/bin.comcast:${PATH}"
fi

# Set MANPATH so it includes users' private man if it exists
if [ -d "${HOME}/man" ]; then
  export MANPATH="${HOME}/man:${MANPATH}"
fi

# Set INFOPATH so it includes users' private info if it exists
if [ -d "${HOME}/info" ]; then
  export INFOPATH="${HOME}/info:${INFOPATH}"
fi

export LC_ALL='C'
export LC_ALL=en_US.UTF-8
export LC_CTYPE=en_US.UTF-8

export PS1='\n\u@\h:\W \t \$ '

shopt -s cmdhist

#set -o noclobber

#export HISTIGNORE='[ \t]*:&:ls:[bf]g:exit'
export HISTORYCONTROL=ignorespace
export HISTFILESIZE=1000000
export HISTSIZE=100000

bind "set completion-ignore-case on"
bind "set show-all-if-ambiguous on"

#export JAVA_OPTS="-Djava.awt.headless=true ${JAVA_OPTS}"
export JAVAC_OPTS="-Xlint:unchecked ${JAVAC_OPTS}"

#export MONGO_HOME="/opt/dev/mongodb/latest"
#export PATH="${MONGO_HOME}/bin:${PATH}"

#export MYSQL_HOME="/usr/local/mysql-5.1.43-osx10.6-x86_64"
#export PATH="${MYSQL_HOME}/bin:${PATH}"

export ASPECTJ_HOME="/opt/dev/aspectj/latest"
export PATH="${ASPECTJ_HOME}/bin:${PATH}"
#export CLASSPATH="${ASPECTJ_HOME}/lib/aspectjrt.jar:${CLASSPATH}"

export ANT_HOME="${HOME}/dev/apache/ant/latest"
export PATH="${ANT_HOME}/bin:${PATH}"

export CATALINA_HOME="/opt/dev/apache/tomcat/latest"
export PATH="${CATALINA_HOME}/bin:${PATH}"

export CATALINA_OPTS_NWT_JVM="-XX:ReservedCodeCacheSize=256m -XX:-OmitStackTraceInFastThrow -XX:-UseLWPSynchronization -XX:PermSize=256m -XX:MaxPermSize=512m -Xms2G -Xmx2G -XX:MaxGCPauseMillis=850 -XX:+UseConcMarkSweepGC"
export CATALINA_OPTS_NWT_AWT="-Djava.awt.headless=true"
export CATALINA_OPTS_NWT_JMX="-Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9095 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file=conf/jmxremote.password -Dcom.sun.management.jmxremote.access.file=conf/jmxremote.access"
export CATALINA_OPTS_NWT_HTTP="-Dhttp.keepAlive=true -Dhttp.maxConnections=1000 -Dorg.apache.tomcat.util.http.ServerCookie.ALLOW_EQUALS_IN_VALUE=true -Dorg.apache.tomcat.util.http.ServerCookie.ALLOW_HTTP_SEPARATORS_IN_V0=true"

export CATALINA_OPTS_NWT="${CATALINA_OPTS_NWT_JVM}"
[[ -f ${HOME}/.rxjdbcrc ]] && export CATALINA_OPTS_NWT="${CATALINA_OPTS_NWT} $(${HOME}/.rxjdbcrc)"
export CATALINA_OPTS_NWT="${CATALINA_OPTS_NWT} ${CATALINA_OPTS_NWT_AWT} ${CATALINA_OPTS_NWT_JMX} ${CATALINA_OPTS_NWT_HTTP}"
								
#export CATALINA_OPTS_NWT="-XX:-UseLWPSynchronization -Dhttp.keepAlive=true -XX:PermSize=256m -XX:MaxPermSize=512m -Xms2G -Xmx2G -XX:MaxGCPauseMillis=850 -XX:+UseConcMarkSweepGC -Djava.awt.headless=true -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.port=9095 -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.authenticate=true -Dcom.sun.management.jmxremote.password.file="${CATALINA_HOME}/conf/jmxremote.password" -Dcom.sun.management.jmxremote.access.file="${CATALINA_HOME}/conf/jmxremote.access" -Dorg.apache.tomcat.util.http.ServerCookie.ALLOW_EQUALS_IN_VALUE=true -Dorg.apache.tomcat.util.http.ServerCookie.ALLOW_HTTP_SEPARATORS_IN_V0=true"
#export JPDA_TRANSPORT=dt_socket
#export JPDA_ADDRESS=5005
#export JPDA_SUSPEND=n
#export CATALINA_OPTS="-agentlib:jdwp=transport=${JPDA_TRANSPORT},server=y,suspend=${JPDA_SUSPEND},address=${JPDA_ADDRESS} ${CATALINA_OPTS}"

export DEBUG_JAVA_OPTS="-agentlib:jdwp=transport=dt_socket,server=y,suspend=y,address=5005"
#export CATALINA_OPTS="${DEBUG_JAVA_OPTS} ${CATALINA_OPTS_NWT}"
export CATALINA_OPTS="${CATALINA_OPTS_NWT}"

#export JAD_HOME="/opt/dev/jad158g"
#export JAD_HOME="/Applications/MacJAD.app/Contents/Resources"
#export PATH="${JAD_HOME}/bin:${PATH}"

export YJP_HOME="/Applications/YourKit_Java_Profiler_2015_build_15050.app/Contents/Resources"
export PATH="${YJP_HOME}/bin:${PATH}"

export YJP_LIBRARY_PATH="${YJP_HOME}/bin/mac"
export YJP_LIBRARY_FILE="${YJP_LIBRARY_PATH}/libyjpagent.jnilib"

export GRADLE_HOME="/opt/dev/gradle/latest"
export PATH="${GRADLE_HOME}/bin:${PATH}"

export GRAILS_HOME="/opt/dev/grails/latest"
export PATH="${GRAILS_HOME}/bin:${PATH}"

export GROOVY_HOME="/opt/dev/groovy/latest"
#export GROOVY_HOME="/opt/local/share/java/groovy"
export PATH="${GROOVY_HOME}/bin:${PATH}"

#export SCALA_HOME="/opt/dev/scala/latest"
#export PATH="${SCALA_HOME}/bin:${PATH}"

#export SBT_HOME="/opt/dev/scala-sbt/latest"
#export PATH="${SBT_HOME}/bin:${PATH}"

#export MONETDB_HOME="/usr/local/monetdb"
#export PATH="${MONETDB_HOME}/bin:${PATH}"

#export NTRUTIL_HOME="/Users/chad/dev/NtrUtil"
#export PATH="${NTRUTIL_HOME}/bin:${PATH}"

#export JBOSS_HOME="/opt/dev/jboss/as/latest"
#export PATH="${JBOSS_HOME}/bin:${PATH}"

#export JETTY_HOME="/opt/dev/jetty/latest"
#export PATH="${JETTY_HOME}/bin:${PATH}"

export R_HOME="/Library/Frameworks/R.framework/Resources"
export PATH="${R_HOME}/bin:${PATH}"

export HBASE_HOME="/opt/dev/apache/hbase/latest"
export PATH="${HBASE_HOME}/bin:${PATH}"

export RABBITMQ_HOME="/opt/dev/rabbitmq/server/latest"

#export CXF_HOME="/opt/dev/apache/cxf/latest"
#export PATH="${CXF_HOME}/bin:${PATH}"

#
# Update PATH variable for use with "/usr/local" installations.
#
export PATH="/usr/local/bin:${PATH}"

#
# Ruby
#
#[[ -s "/Users/chad/.rvm/scripts/rvm" ]] && source "/Users/chad/.rvm/scripts/rvm"  # This loads RVM into a shell session.
#export PATH="${HOME}/.rvm/gems/ruby-1.9.3-p0/bin:${HOME}/.rvm/gems/ruby-1.9.3-p0@global/bin:${HOME}/.rvm/rubies/ruby-1.9.3-p0/bin:${HOME}/.rvm/bin:${PATH}"

#
# Unknown and/or not-understood stuff
#
#export PATH=${HOME}/Documents/tools/hadoop/bin:$PATH
#export PATH=${HOME}/Documents/tools/oozie/bin:$PATH
#export PATH=${HOME}/Documents/tools/pig/bin:$PATH


#THIS MUST BE AT THE END OF THE FILE FOR GVM TO WORK!!!
[[ -s "${HOME}/.gvm/bin/gvm-init.sh" ]] && source "${HOME}/.gvm/bin/gvm-init.sh"

#
# Load environment specific files if exist.
#
env_specific_filename=.bash_profile-$(uname -a | awk '{ print $1 }')
#echo "env_specific_filename: ${env_specific_filename}"
[[ -f "${env_specific_filename}" ]] && . "${env_specific_filename}"
